{"version":3,"sources":["webpack:///webpack/bootstrap 6eab8e9799d28b624549","webpack:///./index.js"],"names":["AFRAME","Error","THREE","registerComponent","schema","src","type","createLight","default","position","target","intensity","relative","size","lightColor","lightDistance","lightAngle","Math","PI","lightPenumbra","lightDecay","lightType","oneOf","multiple","setLightType","settings","SpotLight","Color","PointLight","DirectionalLight","init","scene","document","querySelector","object3D","self","el","parentPos","parentEl","sceneEl","data","Vector3","x","y","z","textureLoader","TextureLoader","textureFlare","load","texture","xhr","lensFlare","LensFlare","AdditiveBlending","copy","light","toLowerCase","hasTarget","set","SceneUtils","attach","updateMatrixWorld","add","update","oldData","remove","pause","play"],"mappings":"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","file":"aframe-lensflare-component.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6eab8e9799d28b624549","/* global AFRAME */\n/* global THREE */\n\nif (typeof AFRAME === 'undefined') {\n  throw new Error('Component attempted to register before AFRAME was available.')\n}\n\nif (typeof THREE === 'undefined') {\n  throw new Error('Component attempted to register before THREE was available.')\n}\n\n/**\n * A-Frame Lensflare Component component for A-Frame.\n */\nAFRAME.registerComponent('lensflare', {\n  schema: {\n    src: {\n      type: 'asset'\n    },\n    createLight: {\n      type: 'boolean',\n      default: true\n    },\n    position: {\n      type: 'vec3'\n    },\n    target: {\n      type: 'string'\n    },\n    intensity: {\n      type: 'number',\n      default: 5\n    },\n    relative: {\n      type: 'boolean',\n      default: true\n    },\n    size: {\n      type: 'number',\n      default: 500\n    },\n    lightColor: {\n      type: 'string',\n      default: 'rgb(255, 255, 255)'\n    },\n    lightDistance: {\n      type: 'number',\n      default: 4.0,\n    },\n    lightAngle: {\n      type: 'number',\n      default: Math.PI / 3,\n    },\n    lightPenumbra: {\n      type: 'number',\n      default: 0.077,\n    },\n    lightDecay: {\n      type: 'number',\n      default: 1,\n    },\n    lightType: {\n      default: 'spot',\n      oneOf: ['directional', 'point', 'spot']\n    }\n  },\n\n  /**\n   * Set if component needs multiple instancing.\n   */\n  multiple: true,\n\n  /**\n   * setLightType - Create a light based on lightType\n   *\n   * @param  {String} type Type of the light, supplied as a string.\n   * @param  {Object} settings Additional settings to pass to the light. E.g. angle and decay\n   * @return {THREE.Light}  A THREE.JS light object\n   */\n  setLightType: function(type, settings) {\n    switch (type) {\n      case 'spot':\n        return new THREE.SpotLight(new THREE.Color(settings.lightColor), settings.intensity, settings.lightDistance, settings.lightAngle, settings.lightPenumbra, settings.lightDecay)\n      case 'point':\n        return new THREE.PointLight(new THREE.Color(settings.lightColor), settings.intensity, settings.lightDistance, settings.lightDecay)\n      case 'directional':\n        return new THREE.DirectionalLight(new THREE.Color(settings.lightColor), settings.intensity)\n    }\n  },\n  /**\n   * Called once when component is attached. Generally for initial setup.\n   */\n  init: function() {\n    const scene = document.querySelector('a-scene').object3D,\n      self = this.el.object3D,\n      parentPos = self.position\n\n    let parentEl = this.el.object3D,\n    sceneEl = this.el.sceneEl.object3D\n\n    //Determine positioning\n    let position = this.data.relative ? new THREE.Vector3(parentPos.x + this.data.position.x, parentPos.y + this.data.position.y, parentPos.z + this.data.position.z) : this.data.position\n\n    //Load texture\n    const textureLoader = new THREE.TextureLoader()\n    const textureFlare = textureLoader.load(this.data.src,\n      function(texture) {\n        return texture\n      },\n      function(xhr) {\n        //console.log((xhr.loaded / xhr.total * 100) + '% loaded')\n      },\n      function(xhr) {\n        throw new Error('An error occured loading the Flare texture')\n      }\n    )\n\n    this.lensFlare = new THREE.LensFlare(textureFlare, this.data.size, 0.0, THREE.AdditiveBlending, new THREE.Color(this.data.lightColor))\n    this.lensFlare.position.copy(position)\n\n    //Determine if the user wants a light\n    if (this.data.createLight) {\n\n      let light = this.setLightType(this.data.lightType.toLowerCase(), this.data)\n\n      //Has a target been supplied?\n      let hasTarget = (this.data.target) ? this.data.target : false\n\n      //Set light target.\n      if (hasTarget) light.target = document.querySelector(this.data.target).object3D\n      light.position.set(position.x, position.y, position.z)\n\n      //If relative, we want to attach the lensflare, and the light as child objects and call updateMatrixWorld once.\n      if(this.data.relative){\n        THREE.SceneUtils.attach(light, sceneEl, parentEl)\n        THREE.SceneUtils.attach(this.lensFlare, sceneEl, parentEl)\n        sceneEl.updateMatrixWorld()\n      } else {\n        scene.add(light)\n      }\n    } else {\n      //If relative, we want to attach the lensflare as a child object. This is so our lensflare works with animation updates.\n      if(this.data.relative){\n        THREE.SceneUtils.attach(this.lensFlare, sceneEl, parentEl)\n        sceneEl.updateMatrixWorld()\n      } else {\n        scene.add(this.lensFlare)\n      }\n    }\n\n\n  },\n\n  /**\n   * Called when component is attached and when component data changes.\n   * Generally modifies the entity based on the data.\n   */\n  update: function(oldData) {\n\n  },\n\n  /**\n   * Called when a component is removed (e.g., via removeAttribute).\n   * Generally undoes all modifications to the entity.\n   */\n  remove: function() {},\n\n  /**\n   * Called on each scene tick.\n   */\n  // tick: function (t) { },\n\n  /**\n   * Called when entity pauses.\n   * Use to stop or remove any dynamic or background behavior such as events.\n   */\n  pause: function() {},\n\n  /**\n   * Called when entity resumes.\n   * Use to continue or add any dynamic or background behavior such as events.\n   */\n  play: function() {}\n});\n\n\n\n// WEBPACK FOOTER //\n// ./index.js"],"sourceRoot":""}